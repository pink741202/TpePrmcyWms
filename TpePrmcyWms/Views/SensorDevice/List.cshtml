@model PaginatedList<TpePrmcyWms.Models.DOM.SensorDevice>
@using TpePrmcyWms.Models.Unit.Back
@using TpePrmcyWms.Models.Service
@{
    List<vSelectOptions> DropValueList = ViewFunc.SelectFidToValue(new List<string>() { "employee", "cabinet" });
    List<vParamOptions> DropParamList = ViewFunc.vParamSelect(new List<string>() { "SensorType", "SsrVer_LED", "SsrVer_LOCK", "SsrVer_DOORCHK", "SsrVer_SCALE" });
}

<div class="ListPage_QueryArea">
    <div class="ListPage_QueryPanel">
        <form asp-action="List" method="post">
            <input type="hidden" name="pageNum" id="pageNum" value="@(Model.PageIndex)" />
            <input type="hidden" name="sortOrder" id="sortOrder" value="@(ViewData["sortOrder"])" />
            <div class="form-actions no-color">
                <select name="qCabinet"
                        asp-items="@(DropValueList.Where(x=>x.Group=="cabinet")
                    .Select(s => new SelectListItem { Value = s.Value, Text = s.Text, Selected=s.Value==ViewBag.qCabinet }))">
                </select>
                
                <select name="qSensorType"
                        asp-items="@(DropParamList.Where(x=>x.Group=="SensorType")
                    .Select(s => new SelectListItem { Value = s.Value, Text = s.Text, Selected=s.Value==ViewBag.qSensorType }))">
                    <option value="">查詢-設備類型</option>
                </select> |
                <select name="qNotWork">
                    <option value="">查詢-壞掉的</option>
                    <option value="Y">壞掉的</option>
                    <option value="N">查詢-壞掉的</option>
                </select> |
                
                <input type="submit" id="btn_submit" value="查詢" class="btn btn_InputSubmit" /> |
                <a asp-action="List">清除</a>
            </div>
        </form>
    </div>

    <div class="ListPage_ListPanel">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        分類
                    </th>                    
                    <th>
                        @Html.DisplayNameFor(model => model[0].SensorType)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].SensorNo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].SensorVersion)
                    </th>    
                    <th>
                        @Html.DisplayNameFor(model => model[0].NotWork)
                    </th>
                    <th class="NotImportant Wd100">
                        @Html.DisplayNameFor(model => model[0].modid)
                    </th>
                    <th class="NotImportant Wd100">
                        <div class="btn_SortOrderCtrl" onclick="goListQuery('sortOrder=moddate')">
                            @Html.DisplayNameFor(model => model[0].moddate)
                        </div>
                    </th>
                    <th class="Wd100">
                        @if (ViewBag.OperateAuths["Creatable"])
                        {
                            <span class="CtrlBtn btn_goAdd" onclick="EditRecord(0)">𝒩𝑒𝓌</span>
                        }
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.Raw(item.TargetTable == "DrugGrid" ? "藥格藥品" : "藥格")
                        </td>
                        <td>
                            @(DropParamList.Where(w => w.Group == "SensorType" && w.Value == item.SensorType).FirstOrDefault()?.Text ?? "")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SensorNo)
                        </td>
                        <td>
                            @(DropParamList.Where(w => w.Group == $"SsrVer_{item.SensorType}" && w.Value == item.SensorVersion).FirstOrDefault()?.Text ?? "")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NotWork)
                        </td>
                        <td class="NotImportant Wd100">
                            @((item.modid ?? 0) == 0 ? "" :
                                DropValueList.Where(w => w.Group == "employee" && w.Value == item.modid.ToString()).FirstOrDefault()?.Text ?? "")
                        </td>
                        <td class="NotImportant Wd100">
                                @Html.DisplayFor(modelItem => item.moddate)
                        </td>
                        <td class="Wd100">
                            <div style="min-width:79px;width:100%;align-items:inherit;">
                                <span class="CtrlBtn btn_goEdit" onclick="EditRecord(@item.FID)">✎</span>
                                    @if (ViewBag.OperateAuths["Deletable"])
                                    {
                                    <span class="CtrlBtn btn_goDelete" onclick="confirmWin('是否確定刪除?', (confirmed)=>{ if (confirmed) { DeleteRecord(@item.FID); }; }) ">✘</span>
                                    }
                            </div>
                            
                        </td>
                    </tr>
                }
            </tbody>
        </table>        
    </div>

    <div class="ListPage_PagesPanel">
        @Html.Raw(Model.PageTagHtml)
    </div>
</div>

<div class="ListPage_EditArea Hidden">
    
</div>



<script>
    //排序鈕特效
    sortingAddClass("@(ViewData["sortOrder"])");

    //編輯鈕
    function EditRecord(fid){
        $(".ListPage_EditArea").load("@Url.Action("ListEdit")?fid=" + fid, function () {
            $(".ListPage_QueryArea").hide();
            $(".ListPage_EditArea").show();
        })
    }

    //刪檔鈕
    function DeleteRecord(qfid){        
        //let PostData = { __RequestVerificationToken: GetToken(), fid:5 }
        let DeletePost = new AjaxJsonPostor("@Url.Action("ListDelete")", qfid);
        DeletePost.SuccessCallback = function (result) {
            AlertWin(result.message);
            if (result.code == 0) { $("#btn_submit").click(); }
        }
        DeletePost.ErrorCallback = function (){
            AlertWin("送出失敗");
        }
        DeletePost.Post();
    }
</script>